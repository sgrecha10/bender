# Generated by Django 4.2.3 on 2024-09-08 20:40

import django.contrib.postgres.fields
import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ExchangeInfo",
            fields=[
                (
                    "server_time",
                    models.BigIntegerField(
                        blank=True, default=None, null=True, verbose_name="serverTime"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "rate_limits",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=django.contrib.postgres.fields.hstore.HStoreField(),
                        blank=True,
                        null=True,
                        size=None,
                        verbose_name="rateLimits",
                    ),
                ),
                (
                    "symbol",
                    models.CharField(
                        max_length=32,
                        primary_key=True,
                        serialize=False,
                        verbose_name="symbol",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=20,
                        null=True,
                        verbose_name="status",
                    ),
                ),
                (
                    "base_asset",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=20,
                        null=True,
                        verbose_name="baseAsset",
                    ),
                ),
                (
                    "base_asset_precision",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="baseAssetPrecision"
                    ),
                ),
                (
                    "quoteAsset",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=20,
                        null=True,
                        verbose_name="quoteAsset",
                    ),
                ),
                (
                    "quote_precision",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="quotePrecision"
                    ),
                ),
                (
                    "quote_asset_precision",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="quoteAssetPrecision"
                    ),
                ),
                (
                    "base_commission_precision",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="baseCommissionPrecision"
                    ),
                ),
                (
                    "quote_commission_precision",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="quoteCommissionPrecision"
                    ),
                ),
                (
                    "order_types",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=20),
                        blank=True,
                        null=True,
                        size=None,
                        verbose_name="orderTypes",
                    ),
                ),
                (
                    "iceberg_allowed",
                    models.BooleanField(default=False, verbose_name="icebergAllowed"),
                ),
                (
                    "oco_allowed",
                    models.BooleanField(default=False, verbose_name="ocoAllowed"),
                ),
                (
                    "quote_order_qty_market_allowed",
                    models.BooleanField(
                        default=False, verbose_name="quoteOrderQtyMarketAllowed"
                    ),
                ),
                (
                    "allow_trailing_stop",
                    models.BooleanField(
                        default=False, verbose_name="allowTrailingStop"
                    ),
                ),
                (
                    "cancel_replace_allowed",
                    models.BooleanField(
                        default=False, verbose_name="cancelReplaceAllowed"
                    ),
                ),
                (
                    "is_spot_trading_allowed",
                    models.BooleanField(
                        default=False, verbose_name="isSpotTradingAllowed"
                    ),
                ),
                (
                    "is_margin_trading_allowed",
                    models.BooleanField(
                        default=False, verbose_name="isMarginTradingAllowed"
                    ),
                ),
                (
                    "permissions",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=20),
                        blank=True,
                        null=True,
                        size=None,
                        verbose_name="permissions",
                    ),
                ),
                (
                    "default_self_trade_prevention_mode",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=20,
                        null=True,
                        verbose_name="defaultSelfTradePreventionMode",
                    ),
                ),
                (
                    "allowed_self_trade_prevention_modes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=20),
                        blank=True,
                        null=True,
                        size=None,
                        verbose_name="allowedSelfTradePreventionModes",
                    ),
                ),
            ],
            options={
                "verbose_name": "Exchange Information",
                "verbose_name_plural": "Exchange Information",
            },
        ),
        migrations.CreateModel(
            name="Interval",
            fields=[
                (
                    "codename",
                    models.CharField(
                        max_length=15,
                        primary_key=True,
                        serialize=False,
                        verbose_name="codename",
                    ),
                ),
                ("value", models.CharField(max_length=4, verbose_name="value")),
                (
                    "minutes_count",
                    models.PositiveIntegerField(verbose_name="minutes_count"),
                ),
            ],
            options={
                "verbose_name": "Interval",
                "verbose_name_plural": "Interval",
            },
        ),
        migrations.CreateModel(
            name="Kline",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "server_time",
                    models.BigIntegerField(
                        blank=True, default=None, null=True, verbose_name="serverTime"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                ("open_time", models.DateTimeField(verbose_name="openTime")),
                (
                    "open_price",
                    models.DecimalField(
                        decimal_places=10, max_digits=20, verbose_name="openPrice"
                    ),
                ),
                (
                    "high_price",
                    models.DecimalField(
                        decimal_places=10, max_digits=20, verbose_name="highPrice"
                    ),
                ),
                (
                    "low_price",
                    models.DecimalField(
                        decimal_places=10, max_digits=20, verbose_name="lowPrice"
                    ),
                ),
                (
                    "close_price",
                    models.DecimalField(
                        decimal_places=10, max_digits=20, verbose_name="closePrice"
                    ),
                ),
                (
                    "volume",
                    models.DecimalField(
                        decimal_places=10, max_digits=20, verbose_name="volume"
                    ),
                ),
                ("close_time", models.DateTimeField(verbose_name="closeTime")),
                (
                    "quote_asset_volume",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        max_digits=20,
                        null=True,
                        verbose_name="quoteAssetVolume",
                    ),
                ),
                (
                    "number_of_trades",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="numberOfTrades"
                    ),
                ),
                (
                    "taker_buy_base_asset_volume",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        max_digits=20,
                        null=True,
                        verbose_name="takerBuyBaseAssetVolume",
                    ),
                ),
                (
                    "taker_buy_quote_asset_volume",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        max_digits=20,
                        null=True,
                        verbose_name="takerBuyQuoteAssetVolume",
                    ),
                ),
                (
                    "unused_field_ignore",
                    models.BooleanField(
                        default=False, verbose_name="unusedFieldIgnore"
                    ),
                ),
                (
                    "symbol",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="klines",
                        to="market_data.exchangeinfo",
                        verbose_name="symbol",
                    ),
                ),
            ],
            options={
                "verbose_name": "Kline",
                "verbose_name_plural": "Kline",
                "unique_together": {("symbol", "open_time")},
            },
        ),
    ]
